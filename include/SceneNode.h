//// Created by Elena Faillace on 26/06/2018.//#ifndef BLACKROSE_SCENENODE_H#define BLACKROSE_SCENENODE_H#include <iostream>#include <vector>#include <SFML/Graphics.hpp>class SceneNode : public sf::Transformable, public sf::Drawable, private sf::NonCopyable {public:    typedef std::unique_ptr<SceneNode> Ptr;    SceneNode();    void attachChild(Ptr child);    Ptr detachChild(const SceneNode& node);    void update(sf::Time dt);    sf::Transform getWorldTransform() const;    sf::Vector2f getWorldPosition() const;private:    //Target is WHERE to draw (sf::RenderWindow), states contain additional info like blend mode, transform, texture    // or shader    //draws everything    void draw(sf::RenderTarget& target, sf::RenderStates states) const final;    //draws only itself    virtual void drawCurrent(sf::RenderTarget& target, sf::RenderStates states) const;    virtual void updateCurrent(sf::Time dt);    void updateChildren(sf::Time dt);private:    std::vector<Ptr> mChildren;    SceneNode* mParent;};#endif //BLACKROSE_SCENENODE_H