//// Created by Elena Faillace on 26/06/2018.//#ifndef BLACKROSE_SCENENODE_H#define BLACKROSE_SCENENODE_H#include <iostream>#include <vector>#include <SFML/Graphics.hpp>class SceneNode : public sf::Transformable, public sf::Drawable, private sf::NonCopyable {public:    typedef std::unique_ptr<SceneNode> Ptr;    SceneNode();    void attachChild(Ptr child);    Ptr detachChild(const SceneNode& node);private:    virtual void draw(sf::RenderTarget& target, sf::RenderStates states) const final;    virtual void drawCurrent(sf::RenderTarget& target, sf::RenderStates states) const;private:    std::vector<Ptr> mChildren;    SceneNode* mParent;};#endif //BLACKROSE_SCENENODE_H