//// Created by Elena Faillace on 07/07/2018.//#include "../../include/Objects/RangedWeapon.h"Textures::ID toTextureID(RangedWeapon::Type type) {    switch(type) {        case RangedWeapon::Type::energyShooter:            return Textures::ID::energyShooter;    }}RangedWeapon::RangedWeapon(const TextureHolder& textures, Type type): textures(textures), type(type) {    equipped = false;    //counterLifeTime = 2000;   use it to have a life time    projectilesCounter = 0;    range = 400;    texture = textures.get(toTextureID(type));    sprite.setTexture(texture);    rect.setPosition(position);    rect.setSize(sf::Vector2f(16,16));    rect.setOrigin(32/2,32/2);    sprite.setPosition(rect.getPosition());}bool RangedWeapon::addProjectile(int added) {    projectilesCounter+=added;    return true;}bool RangedWeapon::shootProjectile() {    if(projectilesCounter <= 0) {        std::cout<<"non ci sono proiettili da sparare"<<std::endl;        return false;    }    projectilesCounter--;    return true;}void RangedWeapon::update() {    //if(!equipped) Object::update();   //checks the time passed since it spawned    rect.setPosition(position);    sprite.setPosition(rect.getPosition());}