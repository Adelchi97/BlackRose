//// Created by Elena Faillace on 30/06/2018.//#include "../include/World.h"World::World(sf::RenderWindow &window) : mWindow(&window), mWorldView(mWindow->getDefaultView()),                                         mWorldBounds(0.f, 0.f, mWorldView.getSize().x, 2000.f),                                         mSpawnPosition(mWorldView.getSize().x/2.f, mWorldBounds.height-mWorldView.getSize().y/2.f),                                         mPlayerRobot(nullptr), mScrollSpeed(-50.f) {    loadTextures();    buildScene();    mWorldView.setCenter(mSpawnPosition);}void World::loadTextures() {    mTextures.load(Textures::RobotGray, "Media/Characters/Robot/gray/tile009.png");    mTextures.load(Textures::RobotRed, "Media/Characters/Robot/red/tile009.png");    mTextures.load(Textures::Floor, "Media/Tiles/lab/tile000.png");}void World::buildScene() {    for (std::size_t i = 0; i < LayerCount; ++i)    {        SceneNode::Ptr layer(new SceneNode());        mSceneLayers[i] = layer.get();        mSceneGraph.attachChild(std::move(layer));    }    sf::Texture& texture = mTextures.get(Textures::Floor);    sf::IntRect textureRect(mWorldBounds);  //I think it repeats for the whole world    texture.setRepeated(true);    //Create the background and attach the SpriteNode to the right layer    //takes my sprite but the rect is the entire world    std::unique_ptr<SpriteNode> backgroundSprite(new SpriteNode(texture, textureRect));    backgroundSprite->setPosition(mWorldBounds.left,mWorldBounds.top);    mSceneLayers[Background]->attachChild(std::move(backgroundSprite));    std::unique_ptr<Robot> mainRobot(new Robot(Robot::Red, mTextures));    mPlayerRobot = mainRobot.get();    mainRobot->setPosition(mSpawnPosition);    mainRobot->setVelocity(40.f,mScrollSpeed);    mSceneLayers[Air]->attachChild(std::move(mainRobot));    //add two escorts    std::unique_ptr<Robot> leftRobot(new Robot(Robot::Gray, mTextures));    leftRobot->setPosition(-80.f,50.f);    mPlayerRobot->attachChild(std::move(leftRobot));    std::unique_ptr<Robot> rightRobot(new Robot(Robot::Gray, mTextures));    rightRobot->setPosition(80.f,50.f);    mPlayerRobot->attachChild(std::move(rightRobot));}void World::draw() {    mWindow->setView(mWorldView);    mWindow->draw(mSceneGraph);}void World::update(sf::Time dt) {    mWorldView.move(0.f,mScrollSpeed * dt.asSeconds());    sf::Vector2f position = mPlayerRobot->getPosition();    sf::Vector2f velocity = mPlayerRobot->getVelocity();    if(position.x <= mWorldBounds.left+150 || position.x >= mWorldBounds.left+mWorldBounds.width-150) {        velocity.x = -velocity.x;        mPlayerRobot->setVelocity(velocity);    }    mSceneGraph.update(dt);}